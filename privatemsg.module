<?php
// $Id$

function privatemsg_system($field){
  $system["description"] = t("Allows private messages between users.");
  return $system[$field];
}

function privatemsg_link($type) {
  if ($type == "menu.view" && user_access("access private messages")) {
    $links[] = lm(t("view inbox"), array("mod" => "privatemsg")) . " (". _privatemsg_get_new_messages() .")";
  }

  return $links ? $links : array();
}

function privatemsg_user($type, $ahem, &$user) {
  if (user_access("access private messages")) {
    if ($type == "view_public") {
      $output .= form_item(t("Private message"), lm(t("send private message"), array("mod" => "privatemsg", "page" => "formnew", "uid" => $user->uid)));
    }
    
    return $output;
  }
}

function privatemsg_block() {
  if (user_access("access private messages")) {
    if ($new_msg = _privatemsg_get_new_messages()) {
      if ($new_msg == 1) {
        $content = '<b>'.t("You have 1 new message").'</b>';
      } else {
        $content = '<b>'.strtr(t("You have %a new messages"), array("%a" => $new_msg)).'</b>';
      }
    } else {
      $content = t("Read your private messages");
    }
    $content = "<div align=\"center\">".lm($content, array("mod" => "privatemsg"))."<br /><br />".lm(t("Write a new message"), array("mod" => "privatemsg", "page" => "formnew"))."</div>";
  } else {
    $content = t("Login to read your private messages");
  }
  $blocks[0][subject] = t("Private messages");
  $blocks[0][content] = $content;
  $blocks[0][link] = "index.php";
  
  return $blocks;
}


function privatemsg_settings() {
  $rate = array(5 => format_interval(5), 10 => format_interval(10), 15 => format_interval(15), 20 => format_interval(20), 30 => format_interval(30), 60 => format_interval(60)); 
  $output .= form_select("Private messaging max rate", "privatemsg_max_rate", variable_get("privatemsg_max_rate", 15), $rate, "Max submit rate for private messaging. To prevent abuse.");
  $output .= form_select("Sent message status", "privatemsg_sent_status", variable_get("privatemsg_sent_status", 1), array("Disabled", "Enabled"), "If enabled users can see whether a message has been read or not.");
  $output .= form_select("Delete unread message", "privatemsg_del_unread", variable_get("privatemsg_del_unread", 1), array("Disabled", "Enabled"), "If enabled a sender can delete a message not yet read by recipient. Sent message status must be enabled.");
  $number = array(5 => 5, 10 => 10, 15 => 15, 20 => 20, 25 => 25, 30 => 30, 35 => 35, 40 => 40, 50 => 50, 60 => 60, 80 => 80, 100 => 100);
  $output .= form_select("Messages per page", "privatemsg_per_page", variable_get("privatemsg_per_page", 10), $number, "The maximum number of messages displayed per page; links to browse messages automatically appear.");
  
  return $output;
}


function privatemsg_page() {
  global $page;
  
  if (user_access("access private messages")) {
    $page = $page ? $page : "list";
    $f = "_privatemsg_page_" . $page;
    if (function_exists($f)) {
      $f();
    }
  } else {
    theme("header");
    theme("box", t("Access denied"), message_access());
    theme("footer");
  }
}


function privatemsg_perm() {
  return array("access private messages");
}


function privatemsg_get_link($name) {
  return drupal_url(array("mod" => "privatemsg", "page" => "formnewtouser", "edit[recipient]" => $name), "module");
}

/*
** page functions (a la chatbox.module)
*/

function _privatemsg_page_list($premessage='') {
  global $msg_to_del, $in_offset, $out_offset;
  
  $rows = variable_get("privatemsg_per_page", 10);
  
  if (!$out_offset) { $out_offset = 0; }
  if (!$in_offset) { $in_offset = 0; }
  
  if ($msg_to_del) {
    foreach ($msg_to_del as $message_id) {
      _privatemsg_message_delete($message_id);
    }
    $premessage = t("Messages deleted");
  }
  
  $output = "<br /><p align='center'><b><i>$premessage</i></b></p>";
  $output .= "<form method=\"post\" name=\"messages\" action=\"".drupal_url(array("mod" => "privatemsg"), "module")."\">
                <table width=\"100%\" border=\"0\">";
  $output .= _privatemsg_folder_label(t("inbox"));
  $result = _privatemsg_messages_inbox($in_offset, $rows);
  $output .= $result["output"];
  
  $output .= "<tr><td colspan=\"3\" align=\"left\">";
  if ($in_offset > 0) {
    $output .= lm(t("Previous inbox messages"), array("mod" => "privatemsg", "in_offset" => ($in_offset-$rows), "out_offset" => $out_offset));
  }
  $output .= "</td><td colspan=\"2\" align=\"right\">";
  if ($result["num_rows"] >= $rows) {
    $output .= lm(t("Next inbox messages"), array("mod" => "privatemsg", "in_offset" => ($in_offset+$rows), "out_offset" => $out_offset));
  }
  $output .= "</td></tr>";
  
  $output .= _privatemsg_folder_label(t("outbox"));
  $result = _privatemsg_messages_sent($out_offset, $rows);
  $output .= $result["output"];
  
  $output .= "<tr><td colspan=\"3\" align=\"left\">";
  if ($out_offset > 0) {
    $output .= lm(t("Previous sent messages"), array("mod" => "privatemsg", "in_offset" => $in_offset, "out_offset" => ($out_offset-$rows)));
  }
  $output .= "</td><td colspan=\"2\" align=\"right\">";
  if ($result["num_rows"] >= $rows) {
    $output .= lm(t("Next sent messages"), array("mod" => "privatemsg", "in_offset" => $in_offset, "out_offset" => ($out_offset+$rows)));
  }
  $output .= "</td></tr>";  
  
  $output .= "</table></form>";
  $output .= "<p align=\"center\">".lm(t("Write a new message"), array("mod" => "privatemsg", "page" => "formnew"))." - <a href='javascript:messages.submit()'  onClick='return confirm(\"".t("Are you sure to delete these messages?")."\")'>".t("Delete messages")."</a></p>";

  theme("header");
  theme("box", t("Private Messages"), $output);
  theme("footer");
}


function _privatemsg_page_formnew($premessage='', $edit='') {
  global $uid;
  
  if (!$edit["recipient"] && $uid) {
    $account = user_load(array("uid" => $uid));
    $edit["recipient"] = $account->name;
  }
  
  $form .= form_textfield(t("To"), "recipient", $edit[recipient], 50, 64);
  $form .= form_textfield(t("Subject"), "subject", $edit[subject], 50, 64);
  $form .= form_textarea(t("Message"), "message", $edit[message], 80, 5);
  $form .= form_submit(t("Send private message"));  
  
  theme("header");
  theme("box", t("Write a new message"), "<br /><p align=\"center\"><b><i>$premessage</i></b></p>".form($form, "post", drupal_url(array("mod" => "privatemsg", "page" => "send"), "module")));
  theme("footer");
}


function _privatemsg_page_formnewtouser() {
  global $edit;
  _privatemsg_page_formnew("", $edit);
}

function _privatemsg_page_send() {
  global $user, $edit;
  $recipient = _privatemsg_get_uid($edit["recipient"]);
  
  throttle("private message", variable_get(privatemsg_max_rate, 15));
  
  if (!$edit["recipient"] || !$edit["subject"] || !$edit["message"]) {
    _privatemsg_page_formnew(t("Warning: every field required"), $edit);
  } elseif ($recipient == $user->uid) {
    _privatemsg_page_formnew(t("A message to yourself?"), $edit);
  } else {
    if ($recipient) {            
      $result = db_query("INSERT INTO privatemsg (author, recipient, subject, message, timestamp, new, hostname)
        VALUES ('%d', '%d', '%s', '%s', '%d', '%d', '%s')", $user->uid, $recipient, strip_tags($edit['subject']), strip_tags($edit['message']), time(), 1, getenv("REMOTE_ADDR"));
      _privatemsg_page_list(t("Message sent"));
    } else {
      _privatemsg_page_formnew(t("Warning: user does not exist"), $edit);
    }
  }
}


function _privatemsg_page_view() {
  global $user, $message_id;
    
  $result = db_query("
    SELECT privatemsg.id, name, author, privatemsg.timestamp, subject, message, new, recipient
    FROM privatemsg, users
    WHERE ( recipient = '%d' OR author = '%d' )
    AND author = users.uid
    AND privatemsg.id = '%d'
  ", $user->uid, $user->uid, $message_id);
  
  $message = db_fetch_object($result);
  if ($message) {
    if (($message->new) && ($user->uid != $message->author)) {
      $result = db_query("
        UPDATE privatemsg
        SET new = 0
        WHERE recipient = '$user->uid'
        AND id = '%d'", $message_id);
    }
    
    $body = "
      <p><b>".t("From").":</b> ".check_output($message->name)."<br />
      <b>".t("Subject").":</b> ".check_output($message->subject)."<br />
      <b>".t("Date").":</b> ".format_date($message->timestamp)."</p>
      ".check_output($message->message, 1)."
      <p align='center'>";
    if ($message->recipient == $user->uid) {
      $body .= lm(t("Reply to this message"), array("mod" => "privatemsg", "page" => "reply", "message_id" => $message->id))." - ";
    }
    if (($message->recipient == $user->uid) || ((variable_get("privatemsg_sent_status", 1) && variable_get("privatemsg_del_unread", 1)) && ($message->new == 1))) {
      $body .= lm(t("Delete this message"), array("mod" => "privatemsg", "page" => "delete", "message_id" => $message->id), "", array("onClick" => "return confirm('".t("Are you sure to delete this message?")."')"))." - ";
    }
      
    $body .= lm(t("List messages"), array("mod" => "privatemsg"))."</p>";
  } else {
    $body = t("Error: you can't read this message");
  }
  
  theme("header");
  theme("box", t("Read message"), $body);
  theme("footer");
}


function _privatemsg_page_reply() {
  global $user, $message_id;
  
  $result = db_query("
    SELECT name, subject, message  FROM privatemsg, users
    WHERE recipient = '$user->uid' 
    AND author = users.uid
    AND privatemsg.id = '%d'", $message_id);
    
  $message = db_fetch_object($result);
  if ($message) {    
    $reply_data["recipient"] = $message->name;
    
    // add "re:" only if not already there
    if (strpos ($message->subject, "re:") === false)
      $reply_data["subject"] = "re: ".$message->subject;
    else
      $reply_data["subject"] = $message->subject;
    
    // body quoting
    $reply_data["message"] = "\n".str_replace ("\n", "\n> ", check_output("\n".$message->message, 0));
    _privatemsg_page_formnew('', $reply_data);
  } else {
    _privatemsg_page_list(t("Error: you can't reply to this message"));
  }
}


function _privatemsg_page_delete() {
  global $message_id;
  
  if (_privatemsg_message_delete($message_id)) {
    _privatemsg_page_list(t("Message deleted"));
  } else {
    _privatemsg_page_list(t("Error: you can't delete this message"));
  }
}


/*
** helper functions
*/

function _privatemsg_get_uid($recipient) {
  $result = db_query("SELECT uid FROM users WHERE name = '%s'", $recipient);
  return db_result($result);
}


function _privatemsg_messages_inbox($offset=0, $rows=10) {
  global $user;
  
  if ($user->uid) {
    $result = db_query("
      SELECT privatemsg.id, users.uid, name, privatemsg.timestamp, subject, new
      FROM privatemsg, users
      WHERE recipient = '$user->uid' 
      AND author = users.uid
      ORDER BY timestamp DESC
      LIMIT %d, %d
    ", $offset, $rows);
    
    while ($message = db_fetch_object($result)) {
      if ($message->new)
        $new = "<b>".t("new")."</b>";
      else
        $new = '';
      $output .= "
        <tr>
          <td width=\"2%\"><input type=\"checkbox\" name=\"msg_to_del[]\" value=\"$message->id\"></td>
          <td width=\"3%\">$new</td>
          <td width=\"20%\">".format_date($message->timestamp, "small")."</td>
          <td width=\"30%\">".format_name($message)."</a></td>
          <td width=\"55%\">".lm(check_output($message->subject), array("mod" => "privatemsg", "page" => "view", "message_id" => $message->id))."</td>
        </tr>
      ";
    }
    
    if (!$output)
      $output = "<tr><td colspan=\"5\" align=\"center\">".t("No private messages")."</td></tr>";
    else
      $output = '
            <tr>
              <td width="2%"><b>'.t("del").'</b></td>
              <td width="3%">&nbsp;</td>
              <td width="20%"><b>'.t("date").'</b></td>
              <td width="30%"><b>'.t("from").'</b></td>
              <td width="55%"><b>'.t("subject").'</b></td>
            </tr>
            '.$output;
    return array("output" => $output, "num_rows" => db_num_rows($result));
  }
}


function _privatemsg_messages_sent($offset=0, $rows=10) {
  global $user;
  
  if ($user->uid) {
    $result = db_query("
      SELECT privatemsg.id, users.uid, name, privatemsg.timestamp, subject, new
      FROM privatemsg, users
      WHERE author = '$user->uid' 
      AND recipient = users.uid
      ORDER BY timestamp DESC
      LIMIT %d, %d
    ", $offset, $rows);
    
    while ($message = db_fetch_object($result)) {
        if (($message->new) && (variable_get("privatemsg_sent_status", 1))) {
          $new = "<b>".t("unread")."</b>";
          if (variable_get("privatemsg_del_unread", 1)) {
            $checkbox = "<input type=\"checkbox\" name=\"msg_to_del[]\" value=\"$message->id\">";
          } else {
            $checkbox = "&nbsp;";
          }
        } else {
          $new = "&nbsp;";
          $checkbox = "&nbsp;";
        }
      $output .= "
        <tr>
          <td width=\"2%\">$checkbox</td>
          <td width=\"3%\">$new</td>
          <td width=\"20%\">".format_date($message->timestamp, "small")."</td>
          <td width=\"30%\">".format_name($message)."</a></td>
          <td width=\"55%\">".lm(check_output($message->subject), array("mod" => "privatemsg", "page" => "view", "message_id" => $message->id))."</td>
        </tr>
      ";
    }
    
    if (!$output)
      $output = "<tr><td colspan=\"5\" align=\"center\">".t("No private messages sent")."</td></tr>";
    else
      $output = '
            <tr>
              <td width="2%"><b>'.((variable_get("privatemsg_del_unread", 1) && variable_get("privatemsg_sent_status", 1)) ? t("del") : "&nbsp;").'</b></td>
              <td width="3%">&nbsp;</td>
              <td width="20%"><b>'.t("date").'</b></td>
              <td width="30%"><b>'.t("to").'</b></td>
              <td width="55%"><b>'.t("subject").'</b></td>
            </tr>
            '.$output;
    return array("output" => $output, "num_rows" => db_num_rows($result));
  }
}


function _privatemsg_get_new_messages() {
  global $user;
  static $num;
  
  if ($user->uid) {
    if (!isset($num)) {
      $result = db_query("
          SELECT count(*)
          FROM privatemsg
          WHERE recipient = '$user->uid'
          AND new = 1
        ");
      $num = db_result($result);
    }
    return $num;
  } else {
    return 0;
  }
}


function _privatemsg_message_delete($message_id) {
  global $user;

  $result = db_query("SELECT id FROM privatemsg WHERE (recipient = '$user->uid' OR (author = '$user->uid' AND new = 1) )
 AND privatemsg.id = '%d'", $message_id);
    
  $message = db_fetch_object($result);
  if ($message) {    
    $result = db_query("DELETE FROM privatemsg WHERE id = '%d'", $message_id);
    
    return true;
  } else {
    return false;
  }
}


function _privatemsg_folder_label($label) {
  return "<tr><td colspan=\"5\" align=\"center\"><b><i>$label</i></b></td></tr>";
}


function _privatemsg_msg_navigator($in_offset, $out_offset, $rows) {
  return "<tr><td>".lm(t("Previous messages"), array("mod" => "privatemsg", "in_offset" => $in_offset, "out_offset" => $out_offset))."</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>".lm(t("Next messages"), array("mod" => "privatemsg", "in_offset" => $in_offset, "out_offset" => $out_offset))."</td></tr>";
}

?>
